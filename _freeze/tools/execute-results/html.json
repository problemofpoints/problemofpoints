{
  "hash": "2430d01c3c67befe33c77f0dc0c7e844",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Tools\"\npage-layout: full\ntitle-block-banner: false\n---\n\n```{=html}\n<section class=\"tools-intro\">\n  <h1>Tools</h1>\n  <p>Quick utilities hosted alongside the blog. Choose one to launch.</p>\n</section>\n```\n\n::: {#1971e145 .cell execution_count=1}\n``` {.python .cell-code}\nfrom pathlib import Path\nimport html\n\ntools_registry = Path(\"tools/_metadata.md\")\n\ndef render_warning(message: str) -> None:\n    print(f'<div class=\"tools-warning\">{message}</div>')\n\nif not tools_registry.exists():\n    render_warning(\"No tools registered yet. Add entries to <code>tools/_metadata.md</code> to populate this page.\")\nelse:\n    try:\n        import yaml\n    except ModuleNotFoundError:\n        render_warning(\"Install the <code>pyyaml</code> package to render this page.\")\n    else:\n        raw_text = tools_registry.read_text(encoding=\"utf-8\")\n        lines = raw_text.splitlines()\n\n        if lines and lines[0].strip() == \"---\":\n            front_matter_lines = []\n            for line in lines[1:]:\n                if line.strip() == \"---\":\n                    break\n                front_matter_lines.append(line)\n            else:\n                front_matter_lines = []\n        else:\n            front_matter_lines = []\n\n        if not front_matter_lines:\n            render_warning(\"No tools found. Add entries under the <code>tools</code> list in <code>tools/_metadata.md</code>.\")\n        else:\n            registry = yaml.safe_load(\"\\n\".join(front_matter_lines)) or {}\n            tools = registry.get(\"tools\") or []\n\n            entries = []\n            for item in tools:\n                if not isinstance(item, dict):\n                    continue\n                slug = str(item.get(\"slug\", \"\")).strip()\n                if not slug:\n                    continue\n                title = str(item.get(\"title\", slug)).strip() or slug\n                description = str(item.get(\"description\", \"\")).strip()\n                path = Path(\"tools\") / slug / \"index.html\"\n                entries.append(\n                    {\n                        \"slug\": slug,\n                        \"title\": title,\n                        \"description\": description,\n                        \"path\": path,\n                    }\n                )\n\n            if not entries:\n                render_warning(\"No valid tool entries found. Ensure each item includes a <code>slug</code>.\")\n            else:\n                available = [item for item in entries if item[\"path\"].exists()]\n                missing = [item for item in entries if not item[\"path\"].exists()]\n\n                if not available:\n                    render_warning(\"Every registered tool needs an <code>index.html</code> at <code>tools/&lt;slug&gt;/index.html</code>.\")\n                else:\n                    print('<div class=\"tools-grid\">')\n                    for item in available:\n                        slug = item[\"slug\"]\n                        title = html.escape(item[\"title\"])\n                        description = html.escape(item[\"description\"])\n                        href = f\"tools/{slug}/\"\n                        card = (\n                            f'<article class=\"tool-card\">'\n                            f'<h3><a href=\"{href}\">{title}</a></h3>'\n                            f'<p>{description}</p>'\n                            f\"</article>\"\n                        )\n                        print(card)\n                    print(\"</div>\")\n\n                if missing:\n                    missing_list = \"\".join(\n                        f\"<li><code>{html.escape(item['slug'])}</code></li>\" for item in missing\n                    )\n                    print(\n                        '<details class=\"tools-warning\">'\n                        \"<summary>Missing assets</summary>\"\n                        \"<p>The following entries do not have a matching <code>index.html</code>:</p>\"\n                        f\"<ul>{missing_list}</ul>\"\n                        \"</details>\"\n                    )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<div class=\"tools-grid\">\n<article class=\"tool-card\"><h3><a href=\"tools/sample-tool/\">Sample Tool</a></h3><p>A minimal example tool that echoes your input back to you.</p></article>\n</div>\n```\n:::\n:::\n\n\n",
    "supporting": [
      "tools_files"
    ],
    "filters": [],
    "includes": {}
  }
}