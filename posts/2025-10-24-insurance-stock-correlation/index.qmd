---
title: "Insurance Stock Correlations and Factor Structure"
date: "2025-10-24"
categories: [analysis, insurance]
subtitle: "TRV, CB, HIG, AIG, and the S&P 500 over the last three years"
draft: true
execute:
  echo: false
  warning: false
  message: false
format:
  html:
    fig-format: svg
---

U.S. property and casualty insurers have spent the last few years balancing catastrophe exposure, higher reinsurance costs, and
rising investment yields. This review looks at how Travelers (TRV), Chubb (CB), Hartford (HIG), and American International Group
(AIG) moved relative to the S&P 500 over the most recent three-year window, using daily total-return data from Yahoo Finance.

## Data and returns

```{python}
import pandas as pd
import yfinance as yf
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.decomposition import FactorAnalysis
from sklearn.preprocessing import StandardScaler

sns.set_theme(style="white", context="talk")

TICKERS = ["TRV", "CB", "HIG", "AIG", "^GSPC"]
START = (pd.Timestamp.today() - pd.DateOffset(years=3)).normalize()

prices = yf.download(
    TICKERS,
    start=START,
    progress=False,
    auto_adjust=False,
)["Adj Close"].dropna()

returns = prices.pct_change().dropna().rename(columns={"^GSPC": "SP500"})
last_date = returns.index[-1]
trading_days = returns.shape[0]
```

Across the roughly three years of observations, the average daily returns remained modest while volatility stayed elevated
relative to pre-pandemic norms.

```{python}
daily_stats = (
    returns.agg(["mean", "std"]) \
    .T.rename(columns={"mean": "avg_daily_return", "std": "daily_volatility"}) \
    .assign(
        avg_daily_return=lambda df: df["avg_daily_return"].mul(100),
        daily_volatility=lambda df: df["daily_volatility"].mul(100),
    )
)
daily_stats.index.name = "Ticker"
daily_stats.round(3)
```

Converting those daily figures into annualized metrics highlights the relative risk profiles among the group.

```{python}
annualized = (
    returns.agg(["mean", "std"]) \
    .T.rename(columns={"mean": "annual_return", "std": "annual_volatility"}) \
    .assign(
        annual_return=lambda df: ((1 + df["annual_return"]) ** 252 - 1) * 100,
        annual_volatility=lambda df: df["annual_volatility"] * (252 ** 0.5) * 100,
    )
)
annualized.index.name = "Ticker"
annualized.round(2)
```

The S&P 500 delivered the highest annualized return, while Hartford and Travelers recorded the greatest volatility among the
insurers. AIG lagged on both return and volatility, reflecting its ongoing portfolio reshaping.

## Correlation structure

A pairwise correlation matrix shows how tightly each ticker moves with the others.

```{python}
corr_matrix = returns.corr()
corr_matrix.round(2)
```

```{python}
fig, ax = plt.subplots(figsize=(6, 5))
heatmap = sns.heatmap(
    corr_matrix,
    annot=True,
    fmt=".2f",
    cmap="Blues",
    vmin=0.4,
    vmax=0.8,
    ax=ax,
)
ax.set_title("Daily Return Correlations (Last 3 Years)")
fig.tight_layout()
fig
```

Each insurer remains most correlated with the index, with Travelers and Hartford also tightly linked to each other. AIG sits on
the lower end of the range, underscoring its differentiated exposures.

## Rolling correlation to the market

Rolling 60-trading-day correlations reveal how market linkage has shifted through time.

```{python}
window = 60
rolling_corr = (
    returns.drop(columns="SP500")
    .apply(lambda col: col.rolling(window).corr(returns["SP500"]))
    .dropna()
)

fig, ax = plt.subplots(figsize=(8, 5))
for ticker in ["TRV", "CB", "HIG", "AIG"]:
    rolling_corr[ticker].plot(ax=ax, label=ticker)
ax.set_title(f"{window}-Day Rolling Correlation with the S&P 500")
ax.set_ylabel("Correlation")
ax.set_xlabel("Date")
ax.legend()
fig.tight_layout()
fig
```

Correlations spiked during the 2022 market selloff, relaxed as volatility cooled, and have drifted higher again during late-cycle
drawdowns. Travelers and Hartford consistently show the strongest tie to the benchmark, while AIG oscillates at the bottom of the
pack.

## Factor analysis

A two-factor model summarizes the latent forces driving the return co-movements. Scaling the data before fitting keeps the
components comparable across tickers.

```{python}
scaler = StandardScaler()
returns_scaled = scaler.fit_transform(returns)
fa = FactorAnalysis(n_components=2, random_state=0)
factor_scores = fa.fit_transform(returns_scaled)
loadings = pd.DataFrame(
    fa.components_.T,
    index=returns.columns,
    columns=["Factor 1", "Factor 2"],
)
communalities = (loadings ** 2).sum(axis=1).to_frame(name="Communality")
factor_summary = loadings.join(communalities)
factor_summary.round(3)
```

Factor 1 maps closely to the market and the two largest insurers, capturing the broad equity driver. Factor 2 differentiates AIG
and, to a lesser extent, Chubb—pointing to company-specific catalysts beyond the market beta. Communalities above 0.5 for most
series indicate the model explains the bulk of their variance.

```{python}
factor_df = pd.DataFrame(
    factor_scores,
    index=returns.index,
    columns=["Factor1", "Factor2"],
)
fig, ax = plt.subplots(figsize=(8, 4))
ax.plot(factor_df.index, factor_df["Factor1"], label="Factor 1")
ax.plot(factor_df.index, factor_df["Factor2"], label="Factor 2")
ax.set_title("Estimated Factor Scores")
ax.set_ylabel("Standardized units")
ax.set_xlabel("Date")
ax.legend()
fig.tight_layout()
fig
```

The factor score paths show broad market stress periods feeding through Factor 1, while Factor 2 flares intermittently when
company-specific news or insurance cycle developments matter more.

## Takeaways

* The four insurers maintain tight links to the S&P 500, with daily correlations generally between 0.6 and 0.7.
* Travelers and Hartford share the highest co-movement, reflecting similar commercial lines footprints and catastrophe exposure.
* A two-factor structure captures most of the variance, with the first factor resembling the market and the second isolating
  insurer-specific swings—particularly for AIG.
